============================================================
    CHECKLIST
============================================================

------------------------------------------------------------
    Before build
    These tasks can be done continiously during the 'sprint' 
------------------------------------------------------------

1. Check the changelog
    O  Is it complete?
    O  Is it correct?
    O  Commit any changes
    
2. Check about.py and AUTHORS 
    O  Is developers ok
    O  Is contributors ok
    O  Is authors ok
            Check in launchpad for contributors that has an e-mail address
    O  Commit any changes
    
3. Import translations from Launchpad
    O  Request download from here (login required)
        http://translations.launchpad.net/thetimelineproj/trunk/+translations
        Format: PO format
    O  Updates th .po files
        Run "python3 tools/import-po-from-launchpad-export.py /path/to/launchpad-export.tar.gz"
    O  Commit "Import translations"
    
4. Update timeline.iss
    O  Check that all PO-files are mentioned in the iss file
    O  Commit "Added po info to iss-file"
    
5. Check version number
    O  Check version number in timelinelib/meta/version.py
    O  Commit "1.xx.0 Changed version for release"
    
6. Run tests
    O  Run "python3 tools/execute-specs.py
    O  Fix errors
    O  Commit

------------------------------------------------------------
	Build
    Tasks done only when a release is made
------------------------------------------------------------

1. Edit the changelog
	O  Change Planned -> Released
    O  Commit
    
2. Tag the release
    O  hg tag 2.xx.0
    
3. Update the repository
    O  hg push
    
4. Build the final release in Jenkins
    O  Build in Jenkins with parameter 1.xx.0
    O  Download and install artifacts to make basic checks  
    O  Make rudimentary tests that it works
    O  Test openeing an ics file

------------------------------------------------------------
	Publish
    When a new release is made
------------------------------------------------------------
   
1. Publish /release/versions.timeline
    O  Add release notes to old version
    O  Change category to released
    O  Add a new planned version
    O  Commit "Updated versions.timeline"
    O  Upload the file to SourceForge
    
2. Publish zip-file
    O  Upload the 1.yy.0.zip file to SourceForge

3. Publish the windows binary
    O  Upload the binary to SourceForge
    
4. Make release announcements
    O  Post news to SorceForge (login required)
        http://sourceforge.net/p/thetimelineproj/news/?source=navbar
    O  Post a mail on the mailing list
        thetimelineproj-user@lists.sourceforge.net

------------------------------------------------------------
	Preparations for next release
------------------------------------------------------------

1. Change version number to "1.xx+1
    O  Add Planned relase in changelog.rst
    O  Change version number in timelinelib/meta/version.py
    O  Commit "Changed version number"
    O  hg push
